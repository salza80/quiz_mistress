= form_for [:client, @quiz_form],html:{ multipart: :true }, authenticity_token: true, class: 'project', remote: @quiz_form.persisted? do |f|
  - if @quiz_form.errors.any?
    #error_explanation
      %h4= "#{pluralize(@quiz_form.errors.count, "errors")}:"
      %ul
        - @quiz_form.errors.full_messages.each do |msg|
          %li= msg
  .form-group
    = f.label :title, class: "col-sm-2"
    .col-sm-10
      = f.text_field :title, class: "form-control", required: true
  .form-group
    = f.label :url_name, class: "col-sm-2"
    .col-sm-10
      = f.text_field :url_name, readonly: f.object.persisted? , class: "form-control", required: true
  .form-group
    = f.label :description, class: "col-sm-2"
    .col-sm-10
      = f.text_field :description, class: "form-control"
  = f.fields_for :image do |ff|
    =render partial:'image_form', locals: { f: ff }
  .actions.clearfix
    %span.pull-right
      -if @quiz_form.persisted?
        = link_to 'Cancel', client_quiz_path(@quiz_form), class: "btn btn-default"
      -else
        = link_to 'Cancel', client_quizzes_path, class: "btn btn-default"
      = f.submit 'Save', class: "btn btn-primary"
